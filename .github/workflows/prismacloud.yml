name: Prisma Cloud IaC Scaning
on:
  push:
    branches: [ main ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ main ]
    
env:
  PRISMA_API_URL: https://api2.eu.prismacloud.io
  PRISMA_CLOUD_CONSOLE: https://console.myprismacloud.com
  REPO_ID: tomcat-with-vulnerable-openssl
  BUILD_IMAGE: "simonpanw/tomcat-with-vulnerable-openssl"
  REMOTE_REGISTRY: "registry.myprismacloud.com"

jobs:
  prisma_cloud_iac_scan:
    runs-on: ubuntu-latest
    name: Run Prisma Cloud IaC Scan to check 
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      # - name: Run Prisma Scan - Bridgecrew
      #   id: Bridgecrew
      #   uses: bridgecrewio/checkov-action@master
      #   env:
      #     PRISMA_API_URL: ${{ env.PRISMA_API_URL }}
      #   with:
      #     directory: .
      #     api-key: ${{ secrets.PRISMA_CLOUD_SECRET }}
      #     output_format: cli
      #     soft_fail: true
      #     quiet: true
      #     download_external_modules: true

  #Build's job
  build_and_scan_with_prisma_cloud:
    #Depends on Prisma Cloud IaC job
    needs: prisma_cloud_iac_scan
    name: Build and Scan with Prisma Cloud
    #Run on Ubuntu using the latest version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2 

      #Prisma Cloud Code Repo Scan
      - name: Twistcli download   
        run: curl -s -k -u ${{ secrets.PCUSER }}:${{ secrets.PCPASS }} ${{ env.PRISMA_CLOUD_CONSOLE }}/api/v1/util/twistcli -v -o /tmp/twistcli;chmod +x /tmp/twistcli  

      #Scan code dependencies
      - name: Repo Vulnerability scan 
        run: /tmp/twistcli coderepo scan --address ${{ env.PRISMA_CLOUD_CONSOLE }} -u ${{ secrets.PCUSER }} -p ${{ secrets.PCPASS }} --details --repository ${{ env.REPO_ID }} ./

      #Build Docker image
      - name: Build the Docker image
        run: docker build . --tag ${{ env.BUILD_IMAGE }}

      - name: Scan for vulnerabilities
        run: /tmp/twistcli images scan --address ${{ env.PRISMA_CLOUD_CONSOLE }} -u ${{ secrets.PCUSER }} -p ${{ secrets.PCPASS }} --details ${{ env.BUILD_IMAGE }}


  #Deploy's job
  deploy-without-prisma-cloud:      
    #Depends on Build Stage
    needs: build_and_scan_with_prisma_cloud
    name: Deploy application to Kubernetes
    #Run on Ubuntu using the latest version
    runs-on: ubuntu-latest
    steps:
      #Build the application using Maven
      - name: Deploy the container to 
        run: echo "Shift Happens"
